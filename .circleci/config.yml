# Scala CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/sample-config/ for more details
#
version: 2.0
jobs:
   build:
        docker:
          # specify the version you desire here
          - image: circleci/openjdk:8-jdk

          # Specify service dependencies here if necessary
          # CircleCI maintains a library of pre-built images
          # documented at https://circleci.com/docs/2.0/circleci-images/
          # - image: circleci/postgres:9.4

        working_directory: ~/repo

        environment:
          # Customize the JVM maximum heap limit
          JVM_OPTS: -Xmx3200m
          TERM: dumb

        steps:
          - checkout

          # Download and cache dependencies
          - restore_cache:
              keys:
                - v1-dependencies-{{ checksum "build.sbt" }}
                # fallback to using the latest cache if no exact match is found
                - v1-dependencies-

          - run: cat /dev/null | sbt test:compile

          - save_cache:
              paths:
                - ~/.m2
              key: v1-dependencies--{{ checksum "build.sbt" }}

          - run: echo "I could finish"

   testUnit:
      name: Unit Test
      docker:
        - image: circleci/openjdk:8-jdk

      steps:
        - checkout
        - run: echo "Runing..."
        - run: sbt clean test

   deploy:
      docker:
        - image: circleci/openjdk:8-jdk

      steps:
        - checkout
        - run: echo "Runing..."
        - run: echo "Deploy"

   sonar:
      docker:
        - image: circleci/openjdk:8-jdk

      steps:
        - checkout
        - run: echo "Runing..."
        - run: echo "Job#4"

   automationTest:
      name: Automation Test
      docker:
        - image: circleci/openjdk:8-jdk

      steps:
        - checkout
        - run: echo "Runing..."
        - run: echo "Job#5"



#workflows:
#  version: 2
#  validate:
#    jobs:
#      - build
#      - test:
#          requires:
#            - build
#      - deploy:
#          requires:
#            - test



workflows:
  version: 2
  validate:
    jobs:
      - build
      - test
      - sonar
      - automationTest:
          requires:
            - build
            - test
  deploy:
    jobs:
      - deploy